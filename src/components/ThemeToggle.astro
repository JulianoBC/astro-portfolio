---
import { toggleTheme, onThemeChange, type Theme, getTheme } from '../utils/theme';
---

<button id="theme-toggle" class="theme-toggle" aria-label="Toggle dark mode">
  <svg id="theme-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="sun-icon">
    <circle cx="12" cy="12" r="5"/>
    <line x1="12" y1="1" x2="12" y2="3"/>
    <line x1="12" y1="21" x2="12" y2="23"/>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"/>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"/>
    <line x1="1" y1="12" x2="3" y2="12"/>
    <line x1="21" y1="12" x2="23" y2="12"/>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"/>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"/>
  </svg>
</button>

<style>
  .theme-toggle {
    background: none;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    color: var(--text-primary);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: background-color 0.3s ease;
  }

  .theme-toggle:hover {
    background-color: var(--bg-hover);
  }

  .sun-icon,
  .moon-icon {
    width: 20px;
    height: 20px;
  }

  :global(.dark) .sun-icon {
    display: none;
  }

  :global(.light) .moon-icon {
    display: none;
  }
</style>

<script>
  import { getTheme, toggleTheme, onThemeChange, type Theme } from '../utils/theme';

  // Get theme and set initial class
  const initialTheme = getTheme();
  document.documentElement.classList.remove('light', 'dark');
  document.documentElement.classList.add(initialTheme);

  // Get theme toggle button and icons
  const themeToggle = document.getElementById('theme-toggle');

  // Function to set the correct icon
  const setThemeIcon = (theme: Theme) => {
    const sunIcon = document.querySelector('#theme-toggle .sun-icon') as HTMLElement;
    const moonIcon = document.querySelector('#theme-toggle .moon-icon') as HTMLElement;
    if (theme === 'dark') {
      if (sunIcon) sunIcon.style.display = 'none';
      if (moonIcon) moonIcon.style.display = 'inline-block';
    } else {
      if (sunIcon) sunIcon.style.display = 'inline-block';
      if (moonIcon) moonIcon.style.display = 'none';
    }
  };

  // Set initial theme icon
  setThemeIcon(initialTheme);

  // Add event listener for theme toggle
  if (themeToggle) {
    themeToggle.addEventListener('click', (e) => {
      e.preventDefault();
      const newTheme = toggleTheme();
      document.documentElement.classList.remove('light', 'dark');
      document.documentElement.classList.add(newTheme);
      setThemeIcon(newTheme); // Update icon on toggle
    });
  }

  // Listen for theme changes (e.g., from another tab)
  onThemeChange((theme) => {
    document.documentElement.classList.remove('light', 'dark');
    document.documentElement.classList.add(theme);
    setThemeIcon(theme); // Update icon on external change
  });
</script>
