---
---

<button id="language-toggle" class="language-toggle" aria-label="Toggle language">
  <div class="lang-option" data-lang="pt-BR">
    <span class="lang-text current">PT-BR</span>
  </div>
  <span class="lang-separator">/</span>
  <div class="lang-option" data-lang="en">
    <span class="lang-text">ENG</span>
  </div>
</button>

<style>
  .language-toggle {
    background: none;
    border: none;
    color: var(--text-color);
    cursor: pointer;
    padding: 0.3rem;
    font-size: 0.9rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s ease;
    position: relative;
    border-radius: 8px;
  }

  .language-toggle:hover {
    background: var(--bg-hover);
    box-shadow: 0 0 0 1px var(--border-color);
  }

  .lang-option {
    display: flex;
    align-items: center;
    padding: 0.4rem 0.6rem;
    border-radius: 4px;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .lang-option:hover {
    background: var(--bg-hover-light);
  }

  .lang-option::before {
    content: '';
    position: absolute;
    top: -5px;
    left: 0;
    right: 0;
    height: 16px;
    background-position: center;
    background-size: contain;
    background-repeat: no-repeat;
    opacity: 0.7;
    transition: all 0.3s ease;
  }

  .lang-option[data-lang="pt-BR"]::before {
    background-image: url('/flags/br.svg');
  }

  .lang-option[data-lang="en"]::before {
    background-image: url('/flags/us.svg');
  }

  .lang-text {
    opacity: 0.9;
    transition: all 0.3s ease;
    position: relative;
    z-index: 2;
    color: var(--text-color);
    font-weight: 500;
  }

  .lang-text.current {
    opacity: 1;
    font-weight: 600;
  }

  .lang-option:has(.current) {
    background: var(--bg-hover);
  }

  .lang-option:has(.current)::before {
    opacity: 0.9;
  }

  .lang-option:hover::before {
    opacity: 1;
  }

  .lang-separator {
    opacity: 0.5;
    margin: 0 0.25rem;
    user-select: none;
  }

  :root {
    --bg-hover: rgba(128, 128, 128, 0.1);
    --bg-hover-light: rgba(128, 128, 128, 0.05);
    --border-color: rgba(128, 128, 128, 0.2);
  }

  .dark {
    --bg-hover: rgba(255, 255, 255, 0.1);
    --bg-hover-light: rgba(255, 255, 255, 0.05);
    --border-color: rgba(255, 255, 255, 0.2);
  }
</style>

<script>
  // Language toggle logic
  const languageToggle = document.getElementById('language-toggle');
  const ptBrOption = languageToggle?.querySelector('[data-lang="pt-BR"]');
  const engOption = languageToggle?.querySelector('[data-lang="en"]');
  const ptBrText = ptBrOption?.querySelector('.lang-text');
  const engText = engOption?.querySelector('.lang-text');

  function toggleLanguage() {
    const currentLang = localStorage.getItem('language') || 'pt-BR';
    const newLang = currentLang === 'pt-BR' ? 'en' : 'pt-BR';
    
    localStorage.setItem('language', newLang);
    
    if (ptBrText && engText) {
      if (newLang === 'pt-BR') {
        ptBrText.classList.add('current');
        engText.classList.remove('current');
      } else {
        ptBrText.classList.remove('current');
        engText.classList.add('current');
      }
    }

    // Aqui você pode adicionar a lógica de tradução quando implementá-la
    console.log(`Language changed to: ${newLang}`);
  }

  if (languageToggle) {
    languageToggle.addEventListener('click', toggleLanguage);
  }

  // Initialize language on load
  const savedLanguage = localStorage.getItem('language') || 'pt-BR';
  if (savedLanguage === 'en' && ptBrText && engText) {
    ptBrText.classList.remove('current');
    engText.classList.add('current');
  }
</script>