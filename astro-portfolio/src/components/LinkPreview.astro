---
interface Props {
  url: string;
}

const { url } = Astro.props;
---

{url && (
  <div class="link-preview-container">
    <div class="preview-iframe">
      <iframe 
        src={url}
        title="Site Preview"
        loading="lazy"
        sandbox="allow-scripts allow-same-origin"
      ></iframe>
    </div>
    <div class="preview-overlay">
      <a href={url} target="_blank" rel="noopener noreferrer" class="preview-link">
        <span class="preview-domain">{new URL(url).hostname}</span>
        <span class="preview-url">{url}</span>
      </a>
    </div>
  </div>
)}

<style>
  .link-preview-container {
    position: relative;
    width: 100%;
    height: 300px;
    overflow: hidden;
    border-radius: 0.5rem;
    background: #f5f5f5;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .preview-iframe {
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .preview-iframe iframe {
    width: 100%;
    height: 100%;
    border: none;
    transform: scale(0.95);
    transform-origin: top left;
    transition: transform 0.3s ease;
  }

  .preview-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.8);
    padding: 1rem;
    color: white;
    transition: opacity 0.3s ease;
  }

  .preview-link {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    color: white;
  }

  .preview-domain {
    font-weight: bold;
    margin-bottom: 0.25rem;
  }

  .preview-url {
    font-size: 0.875rem;
    opacity: 0.8;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .link-preview-container:hover .preview-iframe iframe {
    transform: scale(1);
  }

  @media (max-width: 768px) {
    .link-preview-container {
      height: 200px;
    }
  }
</style>

<script>
  // Adiciona lazy loading para os iframes
  const containers = document.querySelectorAll('.link-preview-container');
  
  containers.forEach(container => {
    const iframe = container.querySelector('iframe');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting && iframe) {
          if (!iframe.src) {
            iframe.src = iframe.getAttribute('data-src') || iframe.getAttribute('src') || '';
          }
        }
      });
    });

    if (container) {
      observer.observe(container);
    }
  });
</script>
